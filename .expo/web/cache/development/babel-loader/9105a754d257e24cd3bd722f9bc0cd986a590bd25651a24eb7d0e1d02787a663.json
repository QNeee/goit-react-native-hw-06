{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useCallback } from \"react\";\nimport { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nexport default function LoginScreen(_ref) {\n  var changeScreen = _ref.changeScreen;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isShowKeyboard = _useState6[0],\n    setIsShowKeyboard = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isFocusedEmail = _useState8[0],\n    setIsFocusedEmail = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isFocusedPassword = _useState10[0],\n    setIsFocusedPassword = _useState10[1];\n  var _useFonts = useFonts({\n      \"Roboto-Medium\": require(\"../assets/fonts/Roboto-Medium.ttf\"),\n      \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var emailHandler = function emailHandler(text) {\n    return setEmail(text);\n  };\n  var passwordHandler = function passwordHandler(text) {\n    return setPassword(text);\n  };\n  var onLogin = function onLogin() {\n    if (!email || !password) {\n      alert(\"Please make sure all fields are filled in correctly\");\n      return;\n    }\n    setIsShowKeyboard(false);\n    Alert.alert(\"Credentials\", email + \" + \" + password);\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  var keyboardHide = function keyboardHide() {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n    setIsFocusedEmail(false);\n    setIsFocusedPassword(false);\n  };\n  var onFocusEmail = function onFocusEmail() {\n    setIsShowKeyboard(true);\n    setIsFocusedEmail(true);\n  };\n  var onFocusPassword = function onFocusPassword() {\n    setIsShowKeyboard(true);\n    setIsFocusedPassword(true);\n    true;\n  };\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  var showPassword = function showPassword() {\n    return alert(\"Your password is: \" + password);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: keyboardHide,\n    children: _jsx(View, {\n      style: styles.container,\n      onLayout: onLayoutRootView,\n      children: _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        children: _jsx(View, {\n          style: styles.backGroundFrame,\n          children: _jsxs(View, {\n            style: styles.form,\n            children: [_jsx(Text, {\n              style: styles.textRegistration,\n              children: \"Login\"\n            }), _jsx(TextInput, {\n              value: email,\n              onChangeText: emailHandler,\n              placeholder: \"Email address\",\n              onFocus: onFocusEmail,\n              style: _objectSpread(_objectSpread({}, styles.input), {}, {\n                borderColor: isFocusedEmail ? \"#FF6C00\" : \"#E8E8E8\"\n              })\n            }), _jsxs(View, {\n              style: styles.passwordContainer,\n              children: [_jsx(TextInput, {\n                value: password,\n                onChangeText: passwordHandler,\n                placeholder: \"Password\",\n                onFocus: onFocusPassword,\n                secureTextEntry: true,\n                style: _objectSpread(_objectSpread({}, styles.inputPass), {}, {\n                  marginBottom: isShowKeyboard ? 32 : 43,\n                  borderColor: isFocusedPassword ? \"#FF6C00\" : \"#E8E8E8\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.showPassword,\n                activeOpacity: 0.7,\n                onPress: showPassword,\n                children: _jsx(Text, {\n                  style: styles.showPasswordTitle,\n                  children: \"Show\"\n                })\n              })]\n            }), isShowKeyboard ? \"\" : _jsxs(View, {\n              children: [_jsx(TouchableOpacity, {\n                style: styles.button,\n                onPress: onLogin,\n                activeOpacity: 0.7,\n                children: _jsx(Text, {\n                  style: styles.buttonTitle,\n                  children: \"Enter\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.loginLink,\n                activeOpacity: 0.7,\n                onPress: function onPress() {\n                  return changeScreen(true);\n                },\n                children: _jsx(Text, {\n                  style: styles.textTitle,\n                  children: \"Already have an account? Sign In\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    width: \"100%\"\n  },\n  input: {\n    height: 50,\n    width: 343,\n    borderWidth: 1,\n    borderRadius: 8,\n    marginBottom: 16,\n    paddingHorizontal: 16,\n    paddingBottom: 15,\n    paddingTop: 16,\n    fontSize: 16,\n    backgroundColor: \"#F6F6F6\",\n    color: \"#212121\",\n    fontFamily: \"Roboto-Regular\"\n  },\n  inputPass: {\n    height: 50,\n    width: 343,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingBottom: 15,\n    paddingTop: 16,\n    backgroundColor: \"#F6F6F6\",\n    color: \"#212121\",\n    fontFamily: \"Roboto-Regular\"\n  },\n  showPasswordTitle: {\n    fontStyle: \"normal\",\n    fontWeight: \"400\",\n    fontSize: 16,\n    color: \"#1B4371\"\n  },\n  showPassword: {\n    right: 16,\n    top: 16,\n    position: \"absolute\"\n  },\n  passwordContainer: {\n    position: \"relative\"\n  },\n  backGroundFrame: {\n    backgroundColor: \"white\",\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25\n  },\n  form: {\n    marginHorizontal: 16,\n    alignItems: \"center\"\n  },\n  button: {\n    backgroundColor: \"#FF6C00\",\n    marginBottom: 16,\n    borderRadius: 100,\n    height: 51,\n    justifyContent: \"center\",\n    width: 343\n  },\n  buttonTitle: {\n    color: \"#FFFFFF\",\n    fontSize: 16,\n    fontFamily: \"Roboto-Regular\",\n    textAlign: \"center\"\n  },\n  textTitle: {\n    color: \"#1B4371\",\n    fontSize: 16,\n    marginBottom: 144,\n    textAlign: \"center\",\n    fontFamily: \"Roboto-Regular\"\n  },\n  textRegistration: {\n    marginTop: 32,\n    marginBottom: 33,\n    fontSize: 30,\n    textAlign: \"center\",\n    fontFamily: \"Roboto-Medium\",\n    fontWeight: \"500\",\n    lineHeight: 35\n  }\n});","map":{"version":3,"names":["React","useState","useCallback","useFonts","SplashScreen","StyleSheet","View","TextInput","KeyboardAvoidingView","TouchableWithoutFeedback","Keyboard","Platform","Alert","Text","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","preventAutoHideAsync","LoginScreen","_ref","changeScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isShowKeyboard","setIsShowKeyboard","_useState7","_useState8","isFocusedEmail","setIsFocusedEmail","_useState9","_useState10","isFocusedPassword","setIsFocusedPassword","_useFonts","require","_useFonts2","fontsLoaded","emailHandler","text","passwordHandler","onLogin","alert","keyboardHide","dismiss","onFocusEmail","onFocusPassword","onLayoutRootView","_asyncToGenerator","hideAsync","showPassword","onPress","children","style","styles","container","onLayout","behavior","OS","backGroundFrame","form","textRegistration","value","onChangeText","placeholder","onFocus","_objectSpread","input","borderColor","passwordContainer","secureTextEntry","inputPass","marginBottom","activeOpacity","showPasswordTitle","button","buttonTitle","loginLink","textTitle","create","flex","justifyContent","width","height","borderWidth","borderRadius","paddingHorizontal","paddingBottom","paddingTop","fontSize","backgroundColor","color","fontFamily","fontStyle","fontWeight","right","top","position","borderTopLeftRadius","borderTopRightRadius","marginHorizontal","alignItems","textAlign","marginTop","lineHeight"],"sources":["C:/Users/sobabl/Documents/github/goit/goit-react-native-hw-02/Screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { useFonts } from \"expo-font\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport {\r\n    StyleSheet,\r\n    View,\r\n    TextInput,\r\n    KeyboardAvoidingView,\r\n    TouchableWithoutFeedback,\r\n    Keyboard,\r\n    Platform,\r\n    Alert,\r\n    Text,\r\n    TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nSplashScreen.preventAutoHideAsync();\r\n\r\nexport default function LoginScreen({ changeScreen }) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isShowKeyboard, setIsShowKeyboard] = useState(false);\r\n    const [isFocusedEmail, setIsFocusedEmail] = useState(false);\r\n    const [isFocusedPassword, setIsFocusedPassword] = useState(false);\r\n    const [fontsLoaded] = useFonts({\r\n        \"Roboto-Medium\": require(\"../assets/fonts/Roboto-Medium.ttf\"),\r\n        \"Roboto-Regular\": require(\"../assets/fonts/Roboto-Regular.ttf\"),\r\n    });\r\n\r\n    const emailHandler = (text) => setEmail(text);\r\n    const passwordHandler = (text) => setPassword(text);\r\n\r\n    const onLogin = () => {\r\n        if (!email || !password) {\r\n            alert(\"Please make sure all fields are filled in correctly\");\r\n            return;\r\n        }\r\n        setIsShowKeyboard(false);\r\n        Alert.alert(\"Credentials\", `${email} + ${password}`);\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    const keyboardHide = () => {\r\n        setIsShowKeyboard(false);\r\n        Keyboard.dismiss();\r\n        setIsFocusedEmail(false);\r\n        setIsFocusedPassword(false);\r\n    };\r\n\r\n    const onFocusEmail = () => {\r\n        setIsShowKeyboard(true);\r\n        setIsFocusedEmail(true);\r\n    };\r\n    const onFocusPassword = () => {\r\n        setIsShowKeyboard(true);\r\n        setIsFocusedPassword(true);\r\n        true;\r\n    };\r\n    const onLayoutRootView = useCallback(async () => {\r\n        if (fontsLoaded) {\r\n            await SplashScreen.hideAsync();\r\n        }\r\n    }, [fontsLoaded]);\r\n\r\n    if (!fontsLoaded) {\r\n        return null;\r\n    }\r\n    const showPassword = () => alert(`Your password is: ${password}`);\r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={keyboardHide}>\r\n            <View style={styles.container} onLayout={onLayoutRootView}>\r\n                <KeyboardAvoidingView\r\n                    behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n                >\r\n                    <View style={styles.backGroundFrame}>\r\n                        <View style={styles.form}>\r\n                            <Text style={styles.textRegistration}>Login</Text>\r\n\r\n                            <TextInput\r\n                                value={email}\r\n                                onChangeText={emailHandler}\r\n                                placeholder=\"Email address\"\r\n                                onFocus={onFocusEmail}\r\n                                style={{\r\n                                    ...styles.input,\r\n                                    borderColor: isFocusedEmail ? \"#FF6C00\" : \"#E8E8E8\",\r\n                                }}\r\n                            />\r\n                            <View style={styles.passwordContainer}>\r\n                                <TextInput\r\n                                    value={password}\r\n                                    onChangeText={passwordHandler}\r\n                                    placeholder=\"Password\"\r\n                                    onFocus={onFocusPassword}\r\n                                    secureTextEntry={true}\r\n                                    style={{\r\n                                        ...styles.inputPass,\r\n                                        marginBottom: isShowKeyboard ? 32 : 43,\r\n                                        borderColor: isFocusedPassword ? \"#FF6C00\" : \"#E8E8E8\",\r\n                                    }}\r\n                                />\r\n                                <TouchableOpacity\r\n                                    style={styles.showPassword}\r\n                                    activeOpacity={0.7}\r\n                                    onPress={showPassword}\r\n                                >\r\n                                    <Text style={styles.showPasswordTitle}>Show</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                            {isShowKeyboard ? (\r\n                                \"\"\r\n                            ) : (\r\n                                <View>\r\n                                    <TouchableOpacity\r\n                                        style={styles.button}\r\n                                        onPress={onLogin}\r\n                                        activeOpacity={0.7}\r\n                                    >\r\n                                        <Text style={styles.buttonTitle}>Enter</Text>\r\n                                    </TouchableOpacity>\r\n                                    <TouchableOpacity\r\n                                        style={styles.loginLink}\r\n                                        activeOpacity={0.7}\r\n                                        onPress={() => changeScreen(true)}\r\n                                    >\r\n                                        <Text style={styles.textTitle}>\r\n                                            Already have an account? Sign In\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n                    </View>\r\n                </KeyboardAvoidingView>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\",\r\n    },\r\n    input: {\r\n        height: 50,\r\n        width: 343,\r\n        borderWidth: 1,\r\n        borderRadius: 8,\r\n        marginBottom: 16,\r\n        paddingHorizontal: 16,\r\n        paddingBottom: 15,\r\n        paddingTop: 16,\r\n        fontSize: 16,\r\n        backgroundColor: \"#F6F6F6\",\r\n        color: \"#212121\",\r\n        fontFamily: \"Roboto-Regular\",\r\n    },\r\n    inputPass: {\r\n        height: 50,\r\n        width: 343,\r\n        borderWidth: 1,\r\n        borderRadius: 8,\r\n        paddingHorizontal: 16,\r\n        paddingBottom: 15,\r\n        paddingTop: 16,\r\n        backgroundColor: \"#F6F6F6\",\r\n        color: \"#212121\",\r\n        fontFamily: \"Roboto-Regular\",\r\n    },\r\n    showPasswordTitle: {\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"400\",\r\n        fontSize: 16,\r\n        color: \"#1B4371\",\r\n    },\r\n    showPassword: {\r\n        right: 16,\r\n        top: 16,\r\n        position: \"absolute\",\r\n    },\r\n    passwordContainer: {\r\n        position: \"relative\",\r\n    },\r\n    backGroundFrame: {\r\n        backgroundColor: \"white\",\r\n        borderTopLeftRadius: 25,\r\n        borderTopRightRadius: 25,\r\n    },\r\n    form: { marginHorizontal: 16, alignItems: \"center\" },\r\n    button: {\r\n        backgroundColor: \"#FF6C00\",\r\n        marginBottom: 16,\r\n        borderRadius: 100,\r\n        height: 51,\r\n        justifyContent: \"center\",\r\n        width: 343,\r\n    },\r\n    buttonTitle: {\r\n        color: \"#FFFFFF\",\r\n        fontSize: 16,\r\n        fontFamily: \"Roboto-Regular\",\r\n        textAlign: \"center\",\r\n    },\r\n    textTitle: {\r\n        color: \"#1B4371\",\r\n        fontSize: 16,\r\n        marginBottom: 144,\r\n        textAlign: \"center\",\r\n        fontFamily: \"Roboto-Regular\",\r\n    },\r\n    textRegistration: {\r\n        marginTop: 32,\r\n        marginBottom: 33,\r\n        fontSize: 30,\r\n        textAlign: \"center\",\r\n        fontFamily: \"Roboto-Medium\",\r\n        fontWeight: \"500\",\r\n        lineHeight: 35,\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}