{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var handleChange = function handleChange(e) {};\n  var _useState = useState({\n      email: '',\n      password: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    form = _useState2[0],\n    setForm = _useState2[1];\n  return _jsxs(View, {\n    style: styles.form,\n    children: [_jsx(Text, {\n      style: styles.formTtl,\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      id: \"email\",\n      value: form.email\n    }), _jsx(TextInput, {\n      style: styles.input,\n      id: \"password\",\n      value: form.password\n    }), _jsx(TouchableOpacity, {\n      style: styles.btn,\n      children: _jsx(Text, {\n        style: styles.btnTtl,\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      })\n    }), _jsx(Text, {\n      style: styles.textTtl,\n      children: \"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  text: {\n    color: 'white'\n  },\n  formTtl: {\n    fontSize: 30,\n    lineHeight: 35,\n    textAlign: 'center',\n    letteSpacing: '0.01em',\n    marginBottom: 33,\n    color: '#212121'\n  },\n  input: {\n    borderWidth: 1,\n    backgroundColor: '#F6F6F6',\n    height: 40,\n    borderRadius: 8,\n    marginHorizontal: 32,\n    color: '#BDBDBD',\n    textAlign: 'center',\n    marginBottom: 16,\n    FontSize: 16,\n    LineHeight: 19\n  },\n  form: {\n    height: 489,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingTop: 32,\n    margin: 'auto',\n    marginTop: 323,\n    backgroundColor: '#fff'\n  },\n  link: {},\n  btn: {\n    height: 40,\n    backgroundColor: '#FF6C00',\n    marginHorizontal: 32,\n    borderRadius: 100,\n    marginTop: 43,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  btnTtl: {\n    fontSize: 16,\n    lineHeight: 19,\n    textAlign: 'center',\n    color: '#FFFFFF'\n  },\n  textTtl: {\n    fontSize: 16,\n    lineHeight: 19,\n    textAlign: 'center',\n    marginTop: 16,\n    color: '#1B4371'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","StyleSheet","TouchableOpacity","Text","View","TextInput","jsx","_jsx","jsxs","_jsxs","LoginScreen","handleChange","e","_useState","email","password","_useState2","_slicedToArray","form","setForm","style","styles","children","formTtl","input","id","value","btn","btnTtl","textTtl","create","text","color","fontSize","lineHeight","textAlign","letteSpacing","marginBottom","borderWidth","backgroundColor","height","borderRadius","marginHorizontal","FontSize","LineHeight","paddingLeft","paddingRight","paddingTop","margin","marginTop","link","justifyContent","alignItems"],"sources":["C:/Users/sobabl/Documents/github/my-app/Screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, TouchableOpacity, Text, View, ImageBackground, TextInput } from 'react-native';\r\n\r\nconst LoginScreen: React.FC = () => {\r\n\r\n    const handleChange = (e) => {\r\n\r\n    }\r\n    const [form, setForm] = useState({ email: '', password: '' });\r\n    return (\r\n        <View style={styles.form}>\r\n            <Text style={styles.formTtl}>Войти</Text>\r\n            <TextInput style={styles.input} id='email' value={form.email} />\r\n            <TextInput style={styles.input} id='password' value={form.password} />\r\n            <TouchableOpacity style={styles.btn}>\r\n                <Text style={styles.btnTtl}>Войти</Text>\r\n            </TouchableOpacity>\r\n            <Text style={styles.textTtl}>Нет аккаунта? Зарегистрироваться</Text>\r\n        </View>\r\n    );\r\n};\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        color: 'white'\r\n    },\r\n    formTtl: {\r\n        fontSize: 30,\r\n        lineHeight: 35,\r\n        textAlign: 'center',\r\n        letteSpacing: '0.01em',\r\n        marginBottom: 33,\r\n        color: '#212121',\r\n    },\r\n\r\n    input: {\r\n        borderWidth: 1,\r\n        backgroundColor: '#F6F6F6',\r\n        height: 40,\r\n        borderRadius: 8,\r\n        marginHorizontal: 32,\r\n        color: '#BDBDBD',\r\n        textAlign: 'center',\r\n        marginBottom: 16,\r\n        FontSize: 16,\r\n        LineHeight: 19,\r\n    },\r\n    form: {\r\n        height: 489,\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingTop: 32,\r\n        margin: 'auto',\r\n        marginTop: 323,\r\n        backgroundColor: '#fff'\r\n    },\r\n    link: {},\r\n    btn: {\r\n        height: 40,\r\n        backgroundColor: '#FF6C00',\r\n        marginHorizontal: 32,\r\n        borderRadius: 100,\r\n        marginTop: 43,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    btnTtl: {\r\n        fontSize: 16,\r\n        lineHeight: 19,\r\n        textAlign: 'center',\r\n        color: '#FFFFFF',\r\n    },\r\n    textTtl: {\r\n        fontSize: 16,\r\n        lineHeight: 19,\r\n        textAlign: 'center',\r\n        marginTop: 16,\r\n        color: '#1B4371',\r\n    },\r\n\r\n\r\n});\r\n\r\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}