{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isPasswordShown = _useState2[0],\n    setIsPasswordShown = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    button = _useState4[0],\n    setButton = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    keyboardHeight = _useState6[0],\n    setKeyboardHeight = _useState6[1];\n  useEffect(function () {\n    var keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', function (_ref) {\n      var endCoordinates = _ref.endCoordinates;\n      setKeyboardHeight(endCoordinates.height);\n    });\n    var keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n      setKeyboardHeight(0);\n    });\n    return function () {\n      keyboardDidShowListener.remove();\n      keyboardDidHideListener.remove();\n    };\n  }, []);\n  var passwordToggle = function passwordToggle() {\n    setIsPasswordShown(function (value) {\n      return !value;\n    });\n  };\n  var onFocusInput = function onFocusInput() {\n    setButton(true);\n  };\n  var onBlurInput = function onBlurInput() {\n    setButton(false);\n  };\n  return _jsxs(View, {\n    style: styles.form,\n    children: [_jsx(Text, {\n      style: styles.loginText,\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B\",\n        onFocus: onFocusInput,\n        onBlur: onBlurInput\n      }), _jsxs(View, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          onFocus: onFocusInput,\n          onBlur: onBlurInput\n        }), _jsx(TouchableOpacity, {\n          activeOpacity: 0.5,\n          style: styles.showBtn,\n          onPress: passwordToggle,\n          children: _jsx(Text, {\n            style: styles.showTitle,\n            children: isPasswordShown ? 'Показать' : 'Скрыть'\n          })\n        })]\n      })]\n    }), !button && _jsxs(View, {\n      children: [_jsx(TouchableOpacity, {\n        activeOpacity: 0.8,\n        style: styles.btn,\n        children: _jsx(Text, {\n          style: styles.btnTitle,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        })\n      }), _jsx(TouchableOpacity, {\n        activeOpacity: 0.8,\n        style: {\n          marginTop: 16\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  loginText: {\n    fontWeight: '500',\n    fontSize: 30,\n    lineHeight: 35,\n    textAlign: 'center',\n    color: '#212121'\n  },\n  form: {\n    backgroundColor: \"#fff\",\n    height: '60%',\n    width: '100%',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    paddingHorizontal: 16,\n    paddingTop: 32\n  },\n  inputContainer: {\n    marginHorizontal: 16,\n    marginTop: 16,\n    marginBottom: keyboardHeight\n  },\n  input: {\n    height: 50,\n    marginTop: 16,\n    borderWidth: 1,\n    borderColor: \"#E8E8E8\",\n    borderRadius: 8,\n    padding: 16,\n    backgroundColor: \"#F6F6F6\",\n    width: 343\n  },\n  showBtn: {\n    position: 'absolute',\n    alignSelf: 'flex-end',\n    right: 16,\n    top: 30\n  },\n  showTitle: {\n    color: '#1B4371',\n    fontSize: 16,\n    fontWeight: '400',\n    lineHeight: 19\n  },\n  btn: {\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 100,\n    height: 51,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 43,\n    width: 343\n  },\n  btnTitle: {\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#FFFFFF\"\n  },\n  link: {\n    fontSize: 16,\n    lineHeight: 19,\n    textAlign: \"center\",\n    color: \"#1B4371\"\n  }\n});","map":{"version":3,"names":["useEffect","useState","View","Text","StyleSheet","TextInput","TouchableOpacity","Keyboard","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","isPasswordShown","setIsPasswordShown","_useState3","_useState4","button","setButton","_useState5","_useState6","keyboardHeight","setKeyboardHeight","keyboardDidShowListener","addListener","_ref","endCoordinates","height","keyboardDidHideListener","remove","passwordToggle","value","onFocusInput","onBlurInput","style","styles","form","children","loginText","inputContainer","input","placeholder","onFocus","onBlur","activeOpacity","showBtn","onPress","showTitle","btn","btnTitle","marginTop","link","create","fontWeight","fontSize","lineHeight","textAlign","color","backgroundColor","width","justifyContent","alignItems","borderTopLeftRadius","borderTopRightRadius","paddingHorizontal","paddingTop","marginHorizontal","marginBottom","borderWidth","borderColor","borderRadius","padding","position","alignSelf","right","top"],"sources":["C:/Users/sobabl/Documents/github/goit/goit-react-native-hw-02/Screens/LoginScreen.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, Keyboard } from \"react-native\";\r\n\r\n\r\n\r\nexport default function LoginScreen() {\r\n    const [isPasswordShown, setIsPasswordShown] = useState(true);\r\n    const [button, setButton] = useState(false);\r\n    const [keyboardHeight, setKeyboardHeight] = useState<number>(0);\r\n    useEffect(() => {\r\n        const keyboardDidShowListener = Keyboard.addListener(\r\n            'keyboardDidShow',\r\n            ({ endCoordinates }) => {\r\n                setKeyboardHeight(endCoordinates.height);\r\n            },\r\n        );\r\n\r\n        const keyboardDidHideListener = Keyboard.addListener(\r\n            'keyboardDidHide',\r\n            () => {\r\n                setKeyboardHeight(0);\r\n            },\r\n        );\r\n\r\n        return () => {\r\n            keyboardDidShowListener.remove();\r\n            keyboardDidHideListener.remove();\r\n        };\r\n    }, []);\r\n    const passwordToggle = () => {\r\n        setIsPasswordShown((value) => !value);\r\n    };\r\n\r\n    const onFocusInput = () => {\r\n        setButton(true);\r\n    }\r\n    const onBlurInput = () => {\r\n        setButton(false);\r\n    }\r\n    return <View style={styles.form}>\r\n        <Text style={styles.loginText}>Войти</Text>\r\n        <View style={styles.inputContainer}>\r\n            <TextInput style={styles.input}\r\n                placeholder=\"Адрес электронной почты\"\r\n                onFocus={onFocusInput}\r\n                onBlur={onBlurInput}\r\n            ></TextInput>\r\n            <View>\r\n                <TextInput style={styles.input}\r\n                    placeholder=\"Пароль\"\r\n                    onFocus={onFocusInput}\r\n                    onBlur={onBlurInput}\r\n                ></TextInput>\r\n                <TouchableOpacity activeOpacity={0.5} style={styles.showBtn} onPress={passwordToggle} >\r\n                    <Text style={styles.showTitle}>{isPasswordShown ? 'Показать' : 'Скрыть'}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n        {!button && <View>\r\n            <TouchableOpacity activeOpacity={0.8} style={styles.btn}>\r\n                <Text style={styles.btnTitle}>Войти</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity activeOpacity={0.8} style={{ marginTop: 16 }} >\r\n                <Text style={styles.link}>Нет аккаунта? Зарегистрироваться</Text>\r\n            </TouchableOpacity>\r\n        </View>}\r\n    </View >\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    loginText: {\r\n        fontWeight: '500',\r\n        fontSize: 30,\r\n        lineHeight: 35,\r\n        textAlign: 'center',\r\n        color: '#212121',\r\n    },\r\n    form: {\r\n        backgroundColor: \"#fff\",\r\n        height: '60%',\r\n        width: '100%',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        borderTopLeftRadius: 25,\r\n        borderTopRightRadius: 25,\r\n        paddingHorizontal: 16,\r\n        paddingTop: 32\r\n    },\r\n    inputContainer: {\r\n        marginHorizontal: 16,\r\n        marginTop: 16,\r\n        marginBottom: keyboardHeight,\r\n    },\r\n    input: {\r\n        height: 50,\r\n        marginTop: 16,\r\n        borderWidth: 1,\r\n        borderColor: \"#E8E8E8\",\r\n        borderRadius: 8,\r\n        padding: 16,\r\n        backgroundColor: \"#F6F6F6\",\r\n        width: 343,\r\n\r\n    },\r\n    showBtn: {\r\n        position: 'absolute',\r\n        alignSelf: 'flex-end',\r\n        right: 16,\r\n        top: 30\r\n    },\r\n    showTitle: {\r\n        color: '#1B4371',\r\n        fontSize: 16,\r\n        fontWeight: '400',\r\n        lineHeight: 19\r\n    },\r\n    btn: {\r\n        backgroundColor: \"#FF6C00\",\r\n        borderRadius: 100,\r\n        height: 51,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 43,\r\n        width: 343\r\n    },\r\n    btnTitle: {\r\n        fontSize: 16,\r\n        lineHeight: 19,\r\n        color: \"#FFFFFF\",\r\n    },\r\n    link: {\r\n        fontSize: 16,\r\n        lineHeight: 19,\r\n        textAlign: \"center\",\r\n        color: \"#1B4371\",\r\n    },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}