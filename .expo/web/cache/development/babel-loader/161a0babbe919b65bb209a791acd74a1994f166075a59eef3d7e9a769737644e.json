{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport LoginScreen from \"./LoginScreen/LoginScreen\";\nimport RegistrationScreen from \"./RegistrationScreen/RegistrationScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar imageBack = require(\"./assets/images/photo.jpg\");\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeScreen = _useState2[0],\n    setActiveScreen = _useState2[1];\n  var changeScreen = function changeScreen(value) {\n    setActiveScreen(value);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: imageBack,\n      style: styles.image,\n      children: activeScreen === false ? _jsx(LoginScreen, {\n        changeScreen: changeScreen\n      }) : _jsx(RegistrationScreen, {\n        changeScreen: changeScreen\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-end\"\n  },\n  image: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","ImageBackground","Dimensions","LoginScreen","RegistrationScreen","jsx","_jsx","imageBack","require","App","_useState","_useState2","_slicedToArray","activeScreen","setActiveScreen","changeScreen","value","style","styles","container","children","source","image","create","flex","justifyContent","width","get","height"],"sources":["C:/Users/sobabl/Documents/github/goit/goit-react-native-hw-02/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, ImageBackground, Dimensions } from \"react-native\";\nimport LoginScreen from \"./LoginScreen/LoginScreen\";\nimport RegistrationScreen from \"./RegistrationScreen/RegistrationScreen\";\n\nconst imageBack = require(\"./assets/images/photo.jpg\");\n\nexport default function App() {\n  const [activeScreen, setActiveScreen] = useState(false);\n  const changeScreen = (value) => {\n    setActiveScreen(value);\n  };\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground source={imageBack} style={styles.image}>\n        {activeScreen === false ? (\n          <LoginScreen changeScreen={changeScreen} />\n        ) : (\n          <RegistrationScreen changeScreen={changeScreen} />\n        )}\n      </ImageBackground>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n  image: {\n    // flex: 1,\n    // resizeMode: \"cover\",\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n    //justifyContent: \"flex-end\",\n  },\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,WAAW;AAClB,OAAOC,kBAAkB;AAAgD,SAAAC,GAAA,IAAAC,IAAA;AAEzE,IAAMC,SAAS,GAAGC,OAAO,6BAA6B;AAEtD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAwCZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;IAC9BF,eAAe,CAACE,KAAK,CAAC;EACxB,CAAC;EAED,OACEV,IAAA,CAACN,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5Bd,IAAA,CAACL,eAAe;MAACoB,MAAM,EAAEd,SAAU;MAACU,KAAK,EAAEC,MAAM,CAACI,KAAM;MAAAF,QAAA,EACrDP,YAAY,KAAK,KAAK,GACrBP,IAAA,CAACH,WAAW;QAACY,YAAY,EAAEA;MAAa,EAAG,GAE3CT,IAAA,CAACF,kBAAkB;QAACW,YAAY,EAAEA;MAAa;IAChD;EACe,EACb;AAEX;AAEA,IAAMG,MAAM,GAAGnB,UAAU,CAACwB,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EAClB,CAAC;EACDH,KAAK,EAAE;IAGLI,KAAK,EAAExB,UAAU,CAACyB,GAAG,CAAC,QAAQ,CAAC,CAACD,KAAK;IACrCE,MAAM,EAAE1B,UAAU,CAACyB,GAAG,CAAC,QAAQ,CAAC,CAACC;EAEnC;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}