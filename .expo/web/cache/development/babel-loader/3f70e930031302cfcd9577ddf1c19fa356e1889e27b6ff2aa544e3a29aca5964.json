{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleMail = function handleMail(text) {\n    setEmail('text');\n    console.log(email);\n  };\n  console.log(email);\n  var handlePassword = function handlePassword(text) {\n    return setPassword(text);\n  };\n  var passwShow = function passwShow() {\n    return alert(\"Your password is: \" + password);\n  };\n  var register = function register() {\n    if (!email || !password) {\n      alert(\"Enter all data pleace!!!\");\n      return;\n    }\n    console.log(\"Email: \" + email + \", Password: \" + password);\n  };\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    style: styles.containerKeyB,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Login\"\n      }), _jsx(TextInput, {\n        style: styles.inputMailPassw,\n        placeholder: \"Email address\",\n        inputMode: \"email\",\n        value: email,\n        onChangeText: handleMail\n      }), _jsx(TextInput, {\n        style: styles.inputMailPassw,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: handlePassword\n      }), _jsx(TouchableOpacity, {\n        style: styles.passwShow,\n        activeOpacity: 0.5,\n        onPress: passwShow,\n        children: _jsx(Text, {\n          style: styles.passwShowText,\n          children: \"Show\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.registerButton,\n        activeOpacity: 0.5,\n        onPress: register,\n        children: _jsx(Text, {\n          style: styles.registerButtonText,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginLink,\n        activeOpacity: 0.5,\n        children: _jsx(Text, {\n          style: styles.loginLinkText,\n          children: \"Don't have an account? Register\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#FFFFFF',\n    alignItems: 'center',\n    width: '100%',\n    borderTopRightRadius: 25,\n    borderTopLeftRadius: 25\n  },\n  containerKeyB: {\n    justifyContent: \"flex-end\"\n  },\n  pfotoContainer: {\n    marginTop: -60,\n    height: 120,\n    width: 120,\n    backgroundColor: '#F6F6F6',\n    borderRadius: 16\n  },\n  addbutton: {\n    marginTop: '65%',\n    left: '90%',\n    height: 25,\n    width: 25,\n    pointerEvents: \"auto\"\n  },\n  title: {\n    fontWeight: '500',\n    fontSize: 30,\n    marginTop: 32,\n    lineHeight: 35\n  },\n  inputLogin: {\n    backgroundColor: '#F6F6F6',\n    width: 343,\n    height: 50,\n    borderRadius: 8,\n    marginTop: 33,\n    padding: 16,\n    fontStyle: 'normal',\n    fontWeight: '400',\n    fontSize: 16,\n    lineHeight: 19\n  },\n  inputMailPassw: {\n    backgroundColor: '#F6F6F6',\n    width: 343,\n    height: 50,\n    borderRadius: 8,\n    padding: 16,\n    marginTop: 16,\n    fontStyle: 'normal',\n    fontWeight: '400',\n    fontSize: 16,\n    position: 'relative'\n  },\n  passwShowText: {\n    fontStyle: 'normal',\n    fontWeight: '400',\n    fontSize: 16,\n    lineHeight: 19\n  },\n  passwShow: {\n    top: -34,\n    left: 130\n  },\n  registerButton: {\n    backgroundColor: '#FF6C00',\n    height: 50,\n    width: 343,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 100,\n    marginTop: 44\n  },\n  registerButtonText: {\n    color: '#fff',\n    fontWeight: '400'\n  },\n  loginLink: {\n    marginTop: 16,\n    marginBottom: 66\n  },\n  loginLinkText: {\n    fontStyle: 'normal',\n    fontWeight: '400',\n    fontSize: 16,\n    lineHeight: 19\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","StyleSheet","TouchableOpacity","Text","View","TextInput","KeyboardAvoidingView","Platform","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleMail","text","console","log","handlePassword","passwShow","alert","register","behavior","OS","style","styles","containerKeyB","children","container","title","inputMailPassw","placeholder","inputMode","value","onChangeText","secureTextEntry","activeOpacity","onPress","passwShowText","registerButton","registerButtonText","loginLink","loginLinkText","create","backgroundColor","alignItems","width","borderTopRightRadius","borderTopLeftRadius","justifyContent","pfotoContainer","marginTop","height","borderRadius","addbutton","left","pointerEvents","fontWeight","fontSize","lineHeight","inputLogin","padding","fontStyle","position","top","color","marginBottom"],"sources":["C:/Users/sobabl/Documents/github/my-app/Screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Switch, Keyboard, TouchableOpacity, Text, View, ImageBackground, TextInput, TextInputTextInputEventData, KeyboardAvoidingView, Platform, Button } from 'react-native';\r\n\r\nconst LoginScreen: React.FC = () => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n\r\n    const handleMail = (text: string): void => {\r\n        setEmail('text')\r\n        console.log(email)\r\n    };\r\n    console.log(email)\r\n    const handlePassword = (text: string) => setPassword(text);\r\n    const passwShow = () => alert(`Your password is: ${password}`);\r\n    const register = () => {\r\n        if (!email || !password) { alert(\"Enter all data pleace!!!\"); return }\r\n        console.log(`Email: ${email}, Password: ${password}`)\r\n    }\r\n    return (\r\n        <KeyboardAvoidingView behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"} style={styles.containerKeyB} >\r\n            <View style={styles.container}>\r\n\r\n                <Text style={styles.title}>Login</Text>\r\n\r\n                <TextInput style={styles.inputMailPassw} placeholder=\"Email address\" inputMode=\"email\" value={email} onChangeText={handleMail} />\r\n                <TextInput style={styles.inputMailPassw} placeholder=\"Password\" secureTextEntry={true} value={password} onChangeText={handlePassword} />\r\n\r\n                <TouchableOpacity style={styles.passwShow} activeOpacity={0.5} onPress={passwShow}>\r\n                    <Text style={styles.passwShowText}>Show</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity style={styles.registerButton} activeOpacity={0.5} onPress={register}>\r\n                    <Text style={styles.registerButtonText}>Login</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity style={styles.loginLink} activeOpacity={0.5}  >\r\n                    <Text style={styles.loginLinkText}>Don't have an account? Register</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    )\r\n};\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        borderTopRightRadius: 25,\r\n        borderTopLeftRadius: 25,\r\n    },\r\n    containerKeyB: {\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    pfotoContainer: {\r\n        marginTop: -60,\r\n        height: 120,\r\n        width: 120,\r\n        backgroundColor: '#F6F6F6',\r\n        borderRadius: 16,\r\n    },\r\n\r\n    addbutton: {\r\n        marginTop: '65%',\r\n        left: '90%',\r\n        height: 25,\r\n        width: 25,\r\n        pointerEvents: \"auto\",\r\n    },\r\n    title: {\r\n        fontWeight: '500',\r\n        fontSize: 30,\r\n        marginTop: 32,\r\n        lineHeight: 35,\r\n    },\r\n    inputLogin: {\r\n        backgroundColor: '#F6F6F6',\r\n        width: 343,\r\n        height: 50,\r\n        borderRadius: 8,\r\n        marginTop: 33,\r\n        padding: 16,\r\n        fontStyle: 'normal',\r\n        fontWeight: '400',\r\n        fontSize: 16,\r\n        lineHeight: 19,\r\n    },\r\n    inputMailPassw: {\r\n        backgroundColor: '#F6F6F6',\r\n        width: 343,\r\n        height: 50,\r\n        borderRadius: 8,\r\n        padding: 16,\r\n        marginTop: 16,\r\n        fontStyle: 'normal',\r\n        fontWeight: '400',\r\n        fontSize: 16,\r\n        position: 'relative',\r\n    },\r\n    passwShowText: {\r\n        fontStyle: 'normal',\r\n        fontWeight: '400',\r\n        fontSize: 16,\r\n        lineHeight: 19,\r\n    },\r\n    passwShow: {\r\n        top: -34,\r\n        left: 130,\r\n    },\r\n    registerButton: {\r\n        backgroundColor: '#FF6C00',\r\n        height: 50,\r\n        width: 343,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: 100,\r\n        marginTop: 44,\r\n    },\r\n    registerButtonText: {\r\n        color: '#fff',\r\n        fontWeight: '400'\r\n    },\r\n    loginLink: {\r\n        marginTop: 16,\r\n        marginBottom: 66\r\n    },\r\n    loginLinkText: {\r\n        fontStyle: 'normal',\r\n        fontWeight: '400',\r\n        fontSize: 16,\r\n        lineHeight: 19,\r\n    },\r\n});\r\n\r\nexport default LoginScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,oBAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,WAAqB,GAAG,SAAxBA,WAAqBA,CAAA,EAAS;EAChC,IAAAC,SAAA,GAA0Bb,QAAQ,CAAS,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgClB,QAAQ,CAAS,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAY,EAAW;IACvCN,QAAQ,CAAC,MAAM,CAAC;IAChBO,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EACtB,CAAC;EACDQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EAClB,IAAMU,cAAc,GAAG,SAAjBA,cAAcA,CAAIH,IAAY;IAAA,OAAKF,WAAW,CAACE,IAAI,CAAC;EAAA;EAC1D,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAA;IAAA,OAASC,KAAK,wBAAsBR,QAAQ,CAAG;EAAA;EAC9D,IAAMS,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACnB,IAAI,CAACb,KAAK,IAAI,CAACI,QAAQ,EAAE;MAAEQ,KAAK,CAAC,0BAA0B,CAAC;MAAE;IAAO;IACrEJ,OAAO,CAACC,GAAG,aAAWT,KAAK,oBAAeI,QAAQ,CAAG;EACzD,CAAC;EACD,OACIX,IAAA,CAACH,oBAAoB;IAACwB,QAAQ,EAAEvB,QAAQ,CAACwB,EAAE,IAAI,KAAK,GAAG,SAAS,GAAG,QAAS;IAACC,KAAK,EAAEC,MAAM,CAACC,aAAc;IAAAC,QAAA,EACrGxB,KAAA,CAACP,IAAI;MAAC4B,KAAK,EAAEC,MAAM,CAACG,SAAU;MAAAD,QAAA,GAE1B1B,IAAA,CAACN,IAAI;QAAC6B,KAAK,EAAEC,MAAM,CAACI,KAAM;QAAAF,QAAA,EAAC;MAAK,EAAO,EAEvC1B,IAAA,CAACJ,SAAS;QAAC2B,KAAK,EAAEC,MAAM,CAACK,cAAe;QAACC,WAAW,EAAC,eAAe;QAACC,SAAS,EAAC,OAAO;QAACC,KAAK,EAAEzB,KAAM;QAAC0B,YAAY,EAAEpB;MAAW,EAAG,EACjIb,IAAA,CAACJ,SAAS;QAAC2B,KAAK,EAAEC,MAAM,CAACK,cAAe;QAACC,WAAW,EAAC,UAAU;QAACI,eAAe,EAAE,IAAK;QAACF,KAAK,EAAErB,QAAS;QAACsB,YAAY,EAAEhB;MAAe,EAAG,EAExIjB,IAAA,CAACP,gBAAgB;QAAC8B,KAAK,EAAEC,MAAM,CAACN,SAAU;QAACiB,aAAa,EAAE,GAAI;QAACC,OAAO,EAAElB,SAAU;QAAAQ,QAAA,EAC9E1B,IAAA,CAACN,IAAI;UAAC6B,KAAK,EAAEC,MAAM,CAACa,aAAc;UAAAX,QAAA,EAAC;QAAI;MAAO,EAC/B,EAEnB1B,IAAA,CAACP,gBAAgB;QAAC8B,KAAK,EAAEC,MAAM,CAACc,cAAe;QAACH,aAAa,EAAE,GAAI;QAACC,OAAO,EAAEhB,QAAS;QAAAM,QAAA,EAClF1B,IAAA,CAACN,IAAI;UAAC6B,KAAK,EAAEC,MAAM,CAACe,kBAAmB;UAAAb,QAAA,EAAC;QAAK;MAAO,EACrC,EAEnB1B,IAAA,CAACP,gBAAgB;QAAC8B,KAAK,EAAEC,MAAM,CAACgB,SAAU;QAACL,aAAa,EAAE,GAAI;QAAAT,QAAA,EAC1D1B,IAAA,CAACN,IAAI;UAAC6B,KAAK,EAAEC,MAAM,CAACiB,aAAc;UAAAf,QAAA,EAAC;QAA+B;MAAO,EAC1D;IAAA;EAEhB,EACY;AAE/B,CAAC;AACD,IAAMF,MAAM,GAAGhC,UAAU,CAACkD,MAAM,CAAC;EAC7Bf,SAAS,EAAE;IACPgB,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE,MAAM;IACbC,oBAAoB,EAAE,EAAE;IACxBC,mBAAmB,EAAE;EACzB,CAAC;EACDtB,aAAa,EAAE;IACXuB,cAAc,EAAE;EACpB,CAAC;EACDC,cAAc,EAAE;IACZC,SAAS,EAAE,CAAC,EAAE;IACdC,MAAM,EAAE,GAAG;IACXN,KAAK,EAAE,GAAG;IACVF,eAAe,EAAE,SAAS;IAC1BS,YAAY,EAAE;EAClB,CAAC;EAEDC,SAAS,EAAE;IACPH,SAAS,EAAE,KAAK;IAChBI,IAAI,EAAE,KAAK;IACXH,MAAM,EAAE,EAAE;IACVN,KAAK,EAAE,EAAE;IACTU,aAAa,EAAE;EACnB,CAAC;EACD3B,KAAK,EAAE;IACH4B,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,EAAE;IACZP,SAAS,EAAE,EAAE;IACbQ,UAAU,EAAE;EAChB,CAAC;EACDC,UAAU,EAAE;IACRhB,eAAe,EAAE,SAAS;IAC1BE,KAAK,EAAE,GAAG;IACVM,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IACfF,SAAS,EAAE,EAAE;IACbU,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,QAAQ;IACnBL,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB,CAAC;EACD7B,cAAc,EAAE;IACZc,eAAe,EAAE,SAAS;IAC1BE,KAAK,EAAE,GAAG;IACVM,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IACfQ,OAAO,EAAE,EAAE;IACXV,SAAS,EAAE,EAAE;IACbW,SAAS,EAAE,QAAQ;IACnBL,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,EAAE;IACZK,QAAQ,EAAE;EACd,CAAC;EACDzB,aAAa,EAAE;IACXwB,SAAS,EAAE,QAAQ;IACnBL,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB,CAAC;EACDxC,SAAS,EAAE;IACP6C,GAAG,EAAE,CAAC,EAAE;IACRT,IAAI,EAAE;EACV,CAAC;EACDhB,cAAc,EAAE;IACZK,eAAe,EAAE,SAAS;IAC1BQ,MAAM,EAAE,EAAE;IACVN,KAAK,EAAE,GAAG;IACVG,cAAc,EAAE,QAAQ;IACxBJ,UAAU,EAAE,QAAQ;IACpBQ,YAAY,EAAE,GAAG;IACjBF,SAAS,EAAE;EACf,CAAC;EACDX,kBAAkB,EAAE;IAChByB,KAAK,EAAE,MAAM;IACbR,UAAU,EAAE;EAChB,CAAC;EACDhB,SAAS,EAAE;IACPU,SAAS,EAAE,EAAE;IACbe,YAAY,EAAE;EAClB,CAAC;EACDxB,aAAa,EAAE;IACXoB,SAAS,EAAE,QAAQ;IACnBL,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAevD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}