{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport LoginScreen from \"./Screens/LoginScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nexport default function App() {\n  var _useFonts = useFonts({\n      PlayfairDisplayRegular: require(\"./assets/fonts/Playfair_Display/static/PlayfairDisplay-Regular.ttf\"),\n      RobotoBold: require(\"./assets/fonts/Roboto/Roboto-Bold.ttf\"),\n      RobotoMedium: require(\"./assets/fonts/Roboto/Roboto-Medium.ttf\"),\n      RobotoRegular: require(\"./assets/fonts/Roboto/Roboto-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    isReady = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (isReady) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [isReady]);\n  if (!isReady) {\n    return null;\n  }\n  return _jsx(View, {\n    style: styles.container,\n    onLayout: onLayoutRootView,\n    children: _jsx(LoginScreen, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 250\n  },\n  innerBox: {\n    fontFamily: \"PlayfairDisplayRegular\",\n    fontSize: 250\n  },\n  text: {\n    fontFamily: \"RobotoRegular\"\n  }\n});","map":{"version":3,"names":["React","useCallback","StyleSheet","View","useFonts","SplashScreen","LoginScreen","jsx","_jsx","preventAutoHideAsync","App","_useFonts","PlayfairDisplayRegular","require","RobotoBold","RobotoMedium","RobotoRegular","_useFonts2","_slicedToArray","isReady","onLayoutRootView","_asyncToGenerator","hideAsync","style","styles","container","onLayout","children","create","flex","backgroundColor","alignItems","justifyContent","fontSize","innerBox","fontFamily","text"],"sources":["C:/Users/sobabl/Documents/github/goit/goit-react-native-hw-02/App.tsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport RegistrationScreen from \"./Screens/RegistrationScreen\";\nimport LoginScreen from \"./Screens/LoginScreen\";\n\nSplashScreen.preventAutoHideAsync();\n\nexport default function App() {\n  const [isReady] = useFonts({\n    PlayfairDisplayRegular: require(\"./assets/fonts/Playfair_Display/static/PlayfairDisplay-Regular.ttf\"),\n    RobotoBold: require(\"./assets/fonts/Roboto/Roboto-Bold.ttf\"),\n    RobotoMedium: require(\"./assets/fonts/Roboto/Roboto-Medium.ttf\"),\n    RobotoRegular: require(\"./assets/fonts/Roboto/Roboto-Regular.ttf\"),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (isReady) {\n      await SplashScreen.hideAsync();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <View style={styles.container} onLayout={onLayoutRootView}>\n      {/* <RegistrationScreen /> */}\n      <LoginScreen />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // fontFamily: \"PlayfairDisplayRegular\",\n    fontSize: 250,\n  },\n  innerBox: {\n    fontFamily: \"PlayfairDisplayRegular\",\n    fontSize: 250,\n  },\n  text: {\n    fontFamily: \"RobotoRegular\",\n    // fontSize: 150,\n\n  },\n});"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAG3C,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAElD,OAAOC,WAAW;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAEhDH,YAAY,CAACI,oBAAoB,EAAE;AAEnC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAkBP,QAAQ,CAAC;MACzBQ,sBAAsB,EAAEC,OAAO,sEAAsE;MACrGC,UAAU,EAAED,OAAO,yCAAyC;MAC5DE,YAAY,EAAEF,OAAO,2CAA2C;MAChEG,aAAa,EAAEH,OAAO;IACxB,CAAC,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAP,SAAA;IALKQ,OAAO,GAAAF,UAAA;EAOd,IAAMG,gBAAgB,GAAGnB,WAAW,CAAAoB,iBAAA,CAAC,aAAY;IAC/C,IAAIF,OAAO,EAAE;MACX,MAAMd,YAAY,CAACiB,SAAS,EAAE;IAChC;EACF,CAAC,GAAE,CAACH,OAAO,CAAC,CAAC;EAEb,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,OACEX,IAAA,CAACL,IAAI;IAACoB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAACC,QAAQ,EAAEN,gBAAiB;IAAAO,QAAA,EAExDnB,IAAA,CAACF,WAAW;EAAG,EACV;AAEX;AAEA,IAAMkB,MAAM,GAAGtB,UAAU,CAAC0B,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IAExBC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAE,wBAAwB;IACpCF,QAAQ,EAAE;EACZ,CAAC;EACDG,IAAI,EAAE;IACJD,UAAU,EAAE;EAGd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}